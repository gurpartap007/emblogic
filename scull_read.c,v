head	1.5;
access;
symbols;
locks
	root:1.5; strict;
comment	@ * @;


1.5
date	2014.07.04.09.31.41;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2014.07.02.13.40.50;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2014.06.30.10.20.18;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2014.06.30.10.46.07;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2014.06.30.08.26.55;	author root;	state Exp;
branches;
next	;


desc
@@


1.5
log
@successfully implemented read function with proper calculations.
@
text
@#include"header.h"
ssize_t scull_read(struct file *filep,char __user *buffer1,size_t count,loff_t *lseek)
{
	struct sculldev *lsculldev;
	struct scullqset *lscullqset;
	int flag=0,i,nocsw=0,nocr=0,noctw=0,quantum_size,noctr=0;
	lsculldev=filep->private_data;
	noctw=noctr=lsculldev->data_size;
	lscullqset=lsculldev->scullqset;
	quantum_size=lsculldev->quantum_size;
	printk(KERN_INFO"Address = %p\n",lscullqset);
	for(i=0;i<8;i++)
	{
		if(flag==1&&nocr==0)
			break;
		if(noctr>=8)
		{
			noctr=quantum_size;
		}
		else
		{
			copy_to_user(buffer1+nocsw,(char *)lscullqset->data[i],noctr);
			printk(KERN_INFO"Address of [%d]= %p\n",i,lscullqset->data[i]);
		}
		copy_to_user(buffer1+nocsw,(char *)lscullqset->data[i],noctr);
		printk(KERN_INFO"Address of [%d]= %p\n",i,lscullqset->data[i]);
		nocsw=nocsw+noctr;
		nocr=noctw-nocsw;
		flag=1;
		if(i==7)
		{
			lscullqset=lscullqset->next;
			i=0-1;
		}
	}

	return 0;
}

@


1.4
log
@reading of quantums not done yet.
@
text
@d4 34
a37 33
struct sculldev *lsculldev;
struct scullqset *lscullqset;
int i,j=0,size=0;
lsculldev=filep->private_data;
lscullqset=lsculldev->scullqset;
printk(KERN_INFO"Address = %p\n",lscullqset);
   for(i=0;i<8;i++)
   {
  copy_to_user(buffer1+size,(char *)lscullqset->data[i],8);
  size=size+8;
   }
lscullqset=lscullqset->next;
printk(KERN_INFO"Address = %p\n",lscullqset);
{
   for(i=0;i<8;i++)
   {
  pr_info("I AM IN LOOP SECOND and value of size is %d\n",size);
  copy_to_user(buffer1+size,(char *)lscullqset->data[i],8);
  pr_info("data is %s\n",(char*)lscullqset->data[i]);
  size=size+8;
   }
j++;
}
lscullqset=lscullqset->next;
printk(KERN_INFO"Address = %p\n",lscullqset);
   for(i=0;i<8;i++)
   {
  copy_to_user(buffer1+size,(char *)lscullqset->data[i],8);
  size=size+8;
   }
printk(KERN_INFO"Characters read = %s\n",buffer1);
printk(KERN_INFO"size= = %d\n",size);
return 0;
@


1.3
log
@*** empty log message ***
@
text
@d5 2
a6 2
char buffer[]="gurpartap";
copy_to_user(buffer1,buffer,9);
d8 28
a35 2
printk(KERN_INFO"No of Characters to read = %d\n",(int)filep->f_pos);
printk(KERN_INFO"address of sculldev = %p\n",lsculldev);
d38 1
@


1.2
log
@*** empty log message ***
@
text
@a4 1
struct sc
a5 1
int fd;
@


1.1
log
@Initial revision
@
text
@d5 4
a8 1
int noctr=(int)filep->f_pos;
@
